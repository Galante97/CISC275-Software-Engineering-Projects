Work flow:
	product backlog -> sprint planning -> sprint backlog -> daily scrum -> story time -> sprint review -> retrospective

Dispatch vector:
	a table referencing every part of memory for a certain function 

	
Error: a subclass of Throwable that indicates serious problems that a reasonable application should not try to catch
 
Exception: is a form of Throwable that indicates conditions that a reasonable application might want to catch
 
Throwable: the superclass of all errors and exceptions in the Java language, two subclasses, Error and Exception
 
RuntimeException: RuntimeException is the superclass of those exceptions that can be thrown during the normal operation of the Java Virtual Machine.

What Is an Exception?
An exception is an event that occurs during the execution of a program that disrupts the normal flow of instructions.

Why Use Exceptions?
	Exceptions separate error handling code from regular code.
	Exception classes group and differentiate error types.
	Exceptions standardize error handling.


What is on the exam:
	anything from first exam (minus estuary questions)
	agile (also waterfall)
	fly weight
	exceptions
	UML (direction of arrow points from subclass to superclass, it also tells us about visibility)
	dispatch vectors (know what they are what they do)
	
shadowing: super and subclass have an attribute name but equal to different things (bad practice)
overloading: 2 or more of the same methods with different parameters (made at compile time)
overriding: same parameters as method from super class, with different declaration (made at runtime)

	
---------------------------------------------------------------------------------------------------------
	
lamda functions: lamda(x) returns 5*x;	
	
	
	
	
	
	
	
	